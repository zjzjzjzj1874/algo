//
// Created by zjzjzjzj1874 on 2024/11/7.
//

#include "rotate_image.h"

/*
[1,2,3]
[4,5,6]
[7,8,9]
==> 旋转后
[7,4,1]
[8,5,2]
[9,6,3]
规律：
[0,0] => [0,2]
[0,1] => [1,2]
[0,2] => [2,2]
[1,0] => [0,1]
[1,1] => [1,1]
[1,2] => [2,1]
[2,0] => [0,0]
[2,1] => [1,0]
[2,2] => [2,0]
==> 推出：i，j上面的元素相互交换位置。
实现：
先转置再翻转
转置
[1,4,7]
[2,5,8]
[3,6,9]
翻转
[7,4,1]
[8,5,2]
[9,6,3]

4*4
[1,2,3,4]
[5,6,7,8]
[9,0,1,2]
[3,4,5,6]
=>
[3,9,5,1]
[4,0,6,2]
[5,1,7,3]
[6,2,8,4]
规律
[0,0] [0,3]
[0,1] [1,3]
[0,2] [2,3]
[0,3] [3,3]
[1,0] [0,2]
[1,1] [1,2]
[1,2] [2,2]
[1,3] [3,2]
 */
// 顺时针旋转图像90度 => 先转置，再翻转
void rotate_image(int** arr, int n) {
    // 先转置
    for (int i = 0; i < n; i++) {
        for (int j = 0; j <= i; j++) {
            int temp = arr[i][j];
            arr[i][j] = arr[j][i];
            arr[j][i] = temp;
        }
    }
    // 再翻转
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n/2; j++) {
            int temp = arr[i][j];
            arr[i][j] = arr[i][n-j-1];
            arr[i][n-j-1] = temp;
        }
    }
}